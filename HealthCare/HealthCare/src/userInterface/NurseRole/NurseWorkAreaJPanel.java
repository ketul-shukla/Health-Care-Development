/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.NurseRole;

import business.Enterprise.Enterprise;
import business.Network.Network;
import business.Organization.NurseOrganization;
import business.Organization.Organization;
import business.Patient.Patient;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anil
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NurseWorkAreaJPanel
     */
    JPanel container;
    Organization organization;
    UserAccount userAccount;
    Enterprise enterprise;
    Network network;
    public NurseWorkAreaJPanel(JPanel container, UserAccount account, NurseOrganization nurseOrganization, Enterprise enterprise, Network network) {
        initComponents();
        this.container = container;
        this.organization = organization;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.network = network;
        refreshTable();
    }
    
    public void refreshTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) tblPatient.getModel();
        dtm.setRowCount(0);
        for(Patient patient : organization.getPatientDirectory().getPatientList()){
           Object[] row = new Object[4];
           row[0] = patient.getPatientID();
           row[1] = patient.getFname() + patient.getLname();
           row[2] = patient.getDateAdmitted();
           //row[3] = 
           dtm.addRow(row);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnRecordVitalSigns = new javax.swing.JButton();
        btnRegisterPatient = new javax.swing.JButton();
        btnDischargePatient = new javax.swing.JButton();
        btnPatientHistory = new javax.swing.JButton();

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Date Admitted"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatient);
        if (tblPatient.getColumnModel().getColumnCount() > 0) {
            tblPatient.getColumnModel().getColumn(0).setResizable(false);
            tblPatient.getColumnModel().getColumn(1).setResizable(false);
            tblPatient.getColumnModel().getColumn(2).setResizable(false);
        }

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnRecordVitalSigns.setText("Record Vital Signs");
        btnRecordVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecordVitalSignsActionPerformed(evt);
            }
        });

        btnRegisterPatient.setText("Register Patient");
        btnRegisterPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterPatientActionPerformed(evt);
            }
        });

        btnDischargePatient.setText("Discharge Patient");
        btnDischargePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDischargePatientActionPerformed(evt);
            }
        });

        btnPatientHistory.setText("View Patient History");
        btnPatientHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDischargePatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRecordVitalSigns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPatientHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRegisterPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addComponent(btnRegisterPatient)
                .addGap(32, 32, 32)
                .addComponent(btnRecordVitalSigns)
                .addGap(32, 32, 32)
                .addComponent(btnPatientHistory)
                .addGap(37, 37, 37)
                .addComponent(btnDischargePatient)
                .addGap(307, 307, 307))
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecordVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecordVitalSignsActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblPatient.getSelectedRow();
       if(selectedRow < 0){
          JOptionPane.showMessageDialog(null,"Please Select a Row from table first","Warning",JOptionPane.WARNING_MESSAGE);
       }
       else{   
       Patient patient  = (Patient) tblPatient.getValueAt(selectedRow,0);
        RecordVitalSigns recordVitalSigns = new RecordVitalSigns(container, patient);
        container.add("RecordvitalSigns", recordVitalSigns);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
       }
    }//GEN-LAST:event_btnRecordVitalSignsActionPerformed

    private void btnRegisterPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterPatientActionPerformed
        // TODO add your handling code here:
        RegisterPatient panel = new RegisterPatient(container, organization);
       container.add("Register New Patient",panel);
       CardLayout layout = (CardLayout) container.getLayout();
       layout.next(container);
    }//GEN-LAST:event_btnRegisterPatientActionPerformed

    private void btnPatientHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientHistoryActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblPatient.getSelectedRow();
       if(selectedRow < 0){
          JOptionPane.showMessageDialog(null,"Please Select a Row from table first","Warning",JOptionPane.WARNING_MESSAGE);
       }
       else{   
       Patient patient  = (Patient) tblPatient.getValueAt(selectedRow,0);
        PatientHistory patientHistory = new PatientHistory(container, patient);
        container.add("Patient History", patientHistory);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
       }
    }//GEN-LAST:event_btnPatientHistoryActionPerformed

    private void btnDischargePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDischargePatientActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPatient.getSelectedRow();
       if(selectedRow >= 0){
           int dialogResult = JOptionPane.showConfirmDialog(null,"Is the patient's disease treated successfully and want to discharge?","Warning",JOptionPane.YES_NO_OPTION);
           if(dialogResult == JOptionPane.YES_OPTION){
               Patient patient= (Patient) tblPatient.getValueAt(selectedRow,0);
               organization.getPatientDirectory().deletePatient(patient);
               refreshTable();
           }
       }
    }//GEN-LAST:event_btnDischargePatientActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDischargePatient;
    private javax.swing.JButton btnPatientHistory;
    private javax.swing.JButton btnRecordVitalSigns;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRegisterPatient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPatient;
    // End of variables declaration//GEN-END:variables
}
